// üìÅ server/controllers/productController.js

import { db } from "../config/connectBD.js"; // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng

// ‚úÖ L·∫•y danh s√°ch s·∫£n ph·∫©m ho·∫∑c t√¨m ki·∫øm s·∫£n ph·∫©m
export const getAllProducts = (req, res) => {
  const { search } = req.query; // L·∫•y tham s·ªë 'search' t·ª´ query string

  let sql = "SELECT * FROM products";
  const params = [];

  // N·∫øu c√≥ tham s·ªë t√¨m ki·∫øm, th√™m ƒëi·ªÅu ki·ªán WHERE v√†o c√¢u truy v·∫•n SQL
  if (search) {
    sql += " WHERE name LIKE ?"; // Gi·∫£ s·ª≠ b·∫°n mu·ªën t√¨m ki·∫øm theo tr∆∞·ªùng 'name'
    params.push(`%${search}%`); // Th√™m wildcard % ƒë·ªÉ t√¨m ki·∫øm linh ho·∫°t
  }

  // Th√™m ORDER BY n·∫øu c·∫ßn thi·∫øt (t√πy ch·ªçn)
  sql += " ORDER BY product_id DESC"; // S·∫Øp x·∫øp theo ID m·ªõi nh·∫•t ho·∫∑c theo t√™n, v.v.

  db.query(sql, params, (err, result) => {
    if (err) {
      console.error('L·ªói khi l·∫•y s·∫£n ph·∫©m:', err); // Log l·ªói ƒë·ªÉ d·ªÖ debug
      return res.status(500).json({ error: "L·ªói m√°y ch·ªß khi l·∫•y s·∫£n ph·∫©m." });
    }
    res.json(result);
  });
};

// ‚úÖ Th√™m s·∫£n ph·∫©m (b·∫Øt bu·ªôc ·∫£nh, category_id, brand_id)
export const createProduct = (req, res) => {
  const { name, price, quantity, description, category_id, brand_id } = req.body;
  const thumbnail = req.file?.filename;

  if (!name || !price || !quantity || !thumbnail || !category_id || !brand_id) {
    return res.status(400).json({ error: 'Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin h·ª£p l·ªá' });
  }

  const sql = `
    INSERT INTO products (name, price, quantity, description, thumbnail, category_id, brand_id)
    VALUES (?, ?, ?, ?, ?, ?, ?)
  `;

  db.query(sql, [name, price, quantity, description, thumbnail, category_id, brand_id], (err, result) => {
    if (err) {
      console.error('L·ªói khi th√™m s·∫£n ph·∫©m:', err);
      return res.status(500).json({ error: "L·ªói m√°y ch·ªß khi th√™m s·∫£n ph·∫©m." });
    }
    res.json({ message: "‚úÖ Th√™m s·∫£n ph·∫©m th√†nh c√¥ng", id: result.insertId });
  });
};

export const updateProduct = (req, res) => {
  const { id } = req.params;
  const { name, price, quantity, description, category_id, brand_id } = req.body;
  const newThumbnail = req.file?.filename;

  // N·∫øu kh√¥ng c√≥ ·∫£nh m·ªõi ‚Üí l·∫•y ·∫£nh c≈© t·ª´ DB
  const getOldThumbnailQuery = "SELECT thumbnail FROM products WHERE product_id = ?";
  db.query(getOldThumbnailQuery, [id], (err, results) => {
    if (err) {
      console.error('L·ªói khi l·∫•y ·∫£nh c≈© ƒë·ªÉ c·∫≠p nh·∫≠t s·∫£n ph·∫©m:', err);
      return res.status(500).json({ error: "L·ªói m√°y ch·ªß khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m." });
    }

    const oldThumbnail = results[0]?.thumbnail;
    const finalThumbnail = newThumbnail || oldThumbnail;

    const sql = `
      UPDATE products
      SET name = ?, price = ?, quantity = ?, description = ?, category_id = ?, brand_id = ?, thumbnail = ?
      WHERE product_id = ?
    `;
    const params = [name, price, quantity, description, category_id, brand_id, finalThumbnail, id];

    db.query(sql, params, (err) => {
      if (err) {
        console.error('L·ªói khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m:', err);
        return res.status(500).json({ error: "L·ªói m√°y ch·ªß khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m." });
      }
      res.json({ message: "‚úÖ C·∫≠p nh·∫≠t s·∫£n ph·∫©m th√†nh c√¥ng" });
    });
  });
};


// ‚úÖ Xo√° s·∫£n ph·∫©m
export const deleteProduct = (req, res) => {
  const { id } = req.params;
  db.query("DELETE FROM products WHERE product_id = ?", [id], (err) => {
    if (err) {
      console.error('L·ªói khi x√≥a s·∫£n ph·∫©m:', err);
      return res.status(500).json({ error: "L·ªói m√°y ch·ªß khi x√≥a s·∫£n ph·∫©m." });
    }
    res.json({ message: "üóëÔ∏è Xo√° s·∫£n ph·∫©m th√†nh c√¥ng" });
  });
};

// ‚úÖ L·∫•y s·∫£n ph·∫©m theo category slug
export const getProductsByCategorySlug = (req, res) => {
  const { slug } = req.params;

  const sql = `
    SELECT p.* FROM products p
    JOIN categories c ON p.category_id = c.category_id
    WHERE c.slug = ?
  `;

  db.query(sql, [slug], (err, result) => {
    if (err) {
      console.error('L·ªói khi truy v·∫•n s·∫£n ph·∫©m theo category slug:', err);
      return res.status(500).json({ error: 'L·ªói server' });
    }

    if (result.length === 0) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m thu·ªôc danh m·ª•c n√†y.' });
    }

    res.json(result);
  });
};

// ‚úÖ L·∫•y s·∫£n ph·∫©m theo brand slug
export const getProductsByBrandSlug = (req, res) => {
  const { slug } = req.params;

  const sql = `
    SELECT p.* FROM products p
    JOIN brands b ON p.brand_id = b.brand_id
    WHERE b.slug = ?
  `;

  db.query(sql, [slug], (err, result) => {
    if (err) {
      console.error('L·ªói khi truy v·∫•n s·∫£n ph·∫©m theo brand slug:', err);
      return res.status(500).json({ error: "L·ªói m√°y ch·ªß khi l·∫•y s·∫£n ph·∫©m theo th∆∞∆°ng hi·ªáu." });
    }
    if (result.length === 0) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m thu·ªôc th∆∞∆°ng hi·ªáu n√†y.' });

    res.json(result);
  });
};